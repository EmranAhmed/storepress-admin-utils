(()=>{"use strict";(()=>{const e=window.StorePress.Utils;!function(o){const t={Init(){o.document.addEventListener("storepress:request-dialog-open",e=>this.HandleOpen(e))},Open({selector:t,onOpen:n=()=>{},onClose:s=()=>{},onSubmit:l=()=>{}}){(0,e.triggerEvent)(o.document,"storepress:request-dialog-open",{selector:t,onOpen:n,onClose:s,onSubmit:l})},HandleOpen({detail:{selector:e,onOpen:t,onClose:n,onSubmit:s}}){const l=o.document.querySelector(e);if(null===l)throw new ReferenceError(`Dialog Selector: "${e}" not found.`);const r=l.querySelectorAll('[data-action="close"]'),i=l.querySelectorAll('[data-action="submit"]');this.controller=new AbortController,l.showModal(),t(l,i,r),o.document.body.classList.add("modal-open"),r.forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),l.close()},{signal:this.controller.signal})}),i.forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),l.classList.add("loading"),s(l,i,r)},{signal:this.controller.signal})}),l.addEventListener("click",e=>{e.target!==l||l.classList.contains("loading")||l.close()},{signal:this.controller.signal}),l.addEventListener("close",()=>{o.document.body.classList.remove("modal-open"),l.classList.remove("loading"),n(l,i,r),this.controller.abort()},{signal:this.controller.signal})}};t.Init(),o.StorePress=o.StorePress||{},o.StorePress.AdminDialog=t.Open}(window)})()})();